name: gutenprint-printer-app
base: core20
version: '1.0'
summary: Gutenprint Printer Application
description: |
  The Gutenprint Printer Application is a PAPPL (Printer Application
  Framework) based Printer Application to support printers using the
  Gutenprint printer driver.

grade: stable
confinement: strict

# Only build on the architectures supported
architectures:
  - build-on: amd64
  - build-on: arm64
  - build-on: armhf

apps:
  gutenprint-printer-app-server:
    command: scripts/run-gutenprint-printer-app-server
    daemon: simple
    # Use a systemd timeout longer than 1 min as PAPPL has a 1-minute
    # shutdown timeout if there are pending jobs for which the printer
    # is not responding. This way we avoid the Printer Application
    # getting killed and shut down uncleanly.
    stop-timeout: 70s
    plugs: [avahi-control, home, network, network-bind, raw-usb]
  gutenprint-printer-app:
    command: scripts/run-gutenprint-printer-app
    plugs: [avahi-control, home, network, network-bind, raw-usb]

parts:
  patches:
    plugin: dump
    source: snap/local/
    organize:
      '*.patch' : patches/
    override-prime: ""

  pappl:
    source: https://github.com/michaelrsweet/pappl
    source-type: git
    plugin: autotools
    override-build: |
      set -eux
      # Raise the supported number of vendor-specific options/attributes in
      # PAPPL to 256, as the original 32 is too small for Gutenprint's
      # expert PPDs
      perl -p -i -e 's/(define\s+PAPPL_MAX_VENDOR\s+)32/\1 256/' pappl/printer.h
      # De-activate log-rotating. It does not work with the forked processes
      # of the filters
      perl -p -i -e 's/(system->logmaxsize\s+=).*/\1 0;/' pappl/system.c
      # As we do not use PAPPL's own backends but the CUPS backends using the
      # "cups" device scheme of pappl-retrofit, we let the manual "Network
      # Printer" device on the "Add Printer" page of the web interface use a
      # "cups:socket://..." URI instead of simply "socket://..."
      perl -p -i -e 's/(httpAssembleURI\(.*?)"socket"(.*?\))/\1"cups:socket"\2/' pappl/system-webif.c
      # PAPPL's build system does not insert the LDFLAGS when linking.
      # Patching Makedefs.in to fix this
      perl -p -i -e 's/^(\s*DSOFLAGS\s*=\s*\S*\s+)/\1\$\(LDFLAGS\) /' Makedefs.in
      snapcraftctl build
    autotools-configure-parameters:
      - --prefix=/usr
      - --with-papplstatedir=/var/snap/gutenprint-printer-app/common
      - --with-papplsockdir=/var/snap/gutenprint-printer-app/common/tmp
      - --enable-libjpeg
      - --enable-libpng
      - --enable-libusb
      - --with-dnssd=avahi
    build-packages:
      - libavahi-client-dev
      - libgnutls28-dev
      - libjpeg-dev
      - libpam0g-dev
      - libpng-dev
      - libusb-1.0-0-dev
      - zlib1g-dev
      - perl-base
    stage-packages:
      - libavahi-client3
      - libpng16-16
      - libusb-1.0-0
    prime:
      - -etc/fonts
      - -var
      - lib/*/lib*.so*
      - usr/lib/lib*.so*
      - usr/lib/*/lib*.so*
      - -usr/include
      - -usr/lib/pkgconfig
      - -usr/share/fonts
      - -usr/share/man
      - -usr/share/doc
      - -usr/share/doc-base
      - -usr/share/lintian
      - -snap
    after: [cups]

  pappl-retrofit:
    source: https://github.com/openprinting/pappl-retrofit
    source-type: git
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/usr
    build-packages:
      - autoconf
      - automake
      - libtool
      - autotools-dev
      - pkg-config
      - perl-base
    stage-packages:
      - libusb-1.0-0
    organize:
      usr/share/legacy-printer-app/testpage.pdf: usr/share/gutenprint-printer-app/testpage.pdf
    prime:
      - lib/*/lib*.so*
      - usr/lib/lib*.so*
      - usr/lib/*/lib*.so*
      - usr/share/gutenprint-printer-app/testpage.pdf
      - -var
      - -usr/var
      - -usr/bin/legacy-printer-app
      - -usr/include
      - -usr/lib/pkgconfig
      - -usr/lib/legacy-printer-app
      - -usr/share/legacy-printer-app
      - -usr/share/fonts
      - -usr/share/man
      - -usr/share/doc
      - -usr/share/doc-base
      - -usr/share/lintian
      - -snap
    after: [cups, cups-filters, pappl]

  qpdf:
    source: https://github.com/qpdf/qpdf/releases/download/release-qpdf-10.6.3/qpdf-10.6.3.tar.gz
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/usr
    build-packages:
      - g++
      - zlib1g-dev
    stage-packages:
      - libjpeg-turbo8
    prime:
      - lib/*/lib*.so*
      - usr/lib/lib*.so*
      - usr/lib/*/lib*.so*
      - -etc/fonts
      - -var
      - -usr/include
      - -share/man
      - -share/doc
      - -share/lintian
      - -usr/share/fonts
      - -usr/share/man
      - -usr/share/doc
      - -usr/share/doc-base
      - -usr/share/lintian
      - -usr/lib/libqpdf.a
      - -usr/lib/libqpdf.la
      - -usr/lib/pkgconfig

  ghostscript:
    source: https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs1000/ghostscript-10.0.0.tar.gz
    plugin: autotools
    # Patch to fix https://github.com/OpenPrinting/cups-filters/issues/484,
    # will be included from 10.01.0 on
    override-build: |
      set -eux
      patch -p1 < $SNAPCRAFT_STAGE/patches/ghostscript-cups-do-not-match-custom-page-sizes.patch
      snapcraftctl build
    # We only need Raster and PostScript output
    autotools-configure-parameters:
      - --prefix=/usr
      - --without-x
      - --disable-gtk
      - --with-drivers=cups,pwgraster,ps2write
      - --enable-freetype
      - --without-tesseract
      - --datarootdir=/snap/gutenprint-printer-app/current/usr/share/
    stage-packages:
      - libpaper1
      - libfontconfig1
      - libfreetype6
      - libpng16-16
    prime:
      - usr/bin/gs
      - lib/*/lib*.so*
      - usr/lib/*/lib*.so*
      - usr/share/ghostscript
      - -etc/fonts
      - -var
      - -usr/include
      - -usr/lib/pkgconfig
      - -usr/share/fonts
      - -usr/share/man
      - -usr/share/doc
      - -usr/share/doc-base
      - -usr/share/lintian
      - -snap
    organize:
      snap/gutenprint-printer-app/current/usr/share: usr/share
    after: [cups]

  cups:
    source: https://github.com/OpenPrinting/cups
    source-type: git
    plugin: autotools
    # We only need libcups (with headers, ...) and the backends
    override-build: |
      set -eux
      patch -p1 < $SNAPCRAFT_STAGE/patches/cups-dnssd-backend-socket-only.patch
      # We use "--with-tls=gnutls" here, as current CUPS defaults to SSL here
      # and this is buggy, causing a segfault when serving out a HTTPS web
      # interface page.
      ./configure --sysconfdir=/var/snap/gutenprint-printer-app/common/ --with-tls=gnutls
      cd cups
      make
      cd ..
      cd backend
      # Have USB quirk files in user-modifiable space for debugging
      perl -p -i -e 's/"CUPS_DATADIR"/"USB_QUIRK_DIR"/' usb-libusb.c
      make snmp dnssd socket ipp ipps lpd usb
      cd ..
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/lib
      cp cups/libcups*.a $SNAPCRAFT_PART_INSTALL/usr/lib/
      cp cups/libcups*.so* $SNAPCRAFT_PART_INSTALL/usr/lib/
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/include/cups
      cp cups/*.h $SNAPCRAFT_PART_INSTALL/usr/include/cups/
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/bin
      cp cups-config $SNAPCRAFT_PART_INSTALL/usr/bin/
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/lib/gutenprint-printer-app/backend/
      (cd backend; \
        cp snmp dnssd socket ipp ipps lpd usb org.cups.usb-quirks $SNAPCRAFT_PART_INSTALL/usr/lib/gutenprint-printer-app/backend/ \
      )
      cp conf/snmp.conf $SNAPCRAFT_PART_INSTALL/usr/lib/gutenprint-printer-app/backend/
    build-packages:
      - patch
      - gettext
      - autoconf
      - automake
      - libtool
      - autotools-dev
      - pkg-config
      - libavahi-client-dev
      - libavahi-common-dev
      - libavahi-compat-libdnssd-dev
      - libdbus-1-dev
      - libfontconfig1-dev
      - libfreetype6-dev
      - libgnutls28-dev
      - libjpeg-dev
      - libldap2-dev
      - libkrb5-dev
      - libpam0g-dev
      - libpaper-dev
      - libpng-dev
      - libusb-1.0-0-dev
      - perl-base
    stage-packages:
      - libusb-1.0-0
      - libavahi-common3
      - libavahi-client3
      - libicu66
      - libjson-glib-1.0-0
      - libsoup2.4-1
      - libxml2
    prime:
      - -etc/fonts
      - -var
      - -usr/include
      - -usr/lib/pkgconfig
      - -usr/share/cups
      - -usr/share/fonts
      - -usr/share/man
      - -usr/share/doc
      - -usr/share/doc-base
      - -usr/share/lintian
      - lib/*/lib*.so*
      - usr/lib/lib*.so*
      - usr/lib/*/lib*.so*
      - usr/lib/gutenprint-printer-app/backend/*
    after: [patches]

  cups-filters:
    source: https://github.com/OpenPrinting/cups-filters
    source-type: git
    plugin: autotools
    # We only need the 2 libraries: libcupsfilters and libppd
    override-build: |
      set -eux
      ./autogen.sh
      ./configure --disable-avahi --disable-ldap --disable-foomatic --disable-braille --disable-mutool --without-rcdir --with-pdftops-path=/snap/gutenprint-printer-app/current/usr/bin/pdftops
      make libppd.la
      make libcupsfilters.la
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/lib
      cp .libs/lib* $SNAPCRAFT_PART_INSTALL/usr/lib/
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/include/ppd
      cp ppd/*.h $SNAPCRAFT_PART_INSTALL/usr/include/ppd/
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/include/cupsfilters
      cp cupsfilters/*.h $SNAPCRAFT_PART_INSTALL/usr/include/cupsfilters/
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/lib/pkgconfig
      cp *.pc $SNAPCRAFT_PART_INSTALL/usr/lib/pkgconfig/
    build-packages:
      - gettext
      - autoconf
      - automake
      - autotools-dev
      - pkg-config
      - g++
      - sharutils
      - poppler-utils
      - libglib2.0-dev
      - liblcms2-dev
      - libpoppler-cpp-dev
      - libpng-dev
      - libjpeg-dev
      - libtiff5-dev
      - zlib1g-dev
      - libfontconfig1-dev
      - libdbus-1-dev
      - libexif-dev
      - librsvg2-bin
    stage-packages:
      - poppler-utils
      - libpoppler-cpp0v5
      - libjbig0
      - liblcms2-2
      - libnspr4
      - libnss3
      - libopenjp2-7
      - libpoppler97
      - libtiff5
      - libwebp6
      - libexif12
    prime:
      - -etc/fonts
      - -var
      - -usr/include
      - -usr/lib/pkgconfig
      - -usr/share/fonts
      - -usr/share/man
      - -usr/share/doc
      - -usr/share/doc-base
      - -usr/share/lintian
      - lib/*/lib*.so*
      - usr/lib/lib*.so*
      - usr/lib/*/lib*.so*
      - usr/lib/*/nss
      - usr/bin/pdftops
    after: [cups, qpdf, ghostscript]

  gutenprint:
    source: https://sourceforge.net/projects/gimp-print/files/gutenprint-5.3/5.3.4/gutenprint-5.3.4.tar.xz
    plugin: autotools
    # We only need the library, the XML resources,  and the CUPS driver
    # (PPD generator, filter, backend)
    autotools-configure-parameters:
      - --prefix=/usr
      - --datarootdir=/snap/gutenprint-printer-app/current/usr/share
      - --enable-shared
      - --disable-rpath
      - --with-modules=static
      - --without-gimp2
      - --disable-libgutenprintui2
      - --with-cups
      - --enable-cups-level3-ppds
      - --enable-translated-cups-ppds
      - --enable-simplified-cups-ppds
      - --enable-cups-1_2-enhancements
      - --disable-cups-ppds
      - --enable-escputil
      - --disable-samples
      - --disable-test
      - --disable-testpattern
      - --enable-nls
    build-packages:
      - byacc
      - libreadline-dev
      - libusb-1.0-0-dev
      - zlib1g-dev
      - flex
      - gettext
      - chrpath
    organize:
      snap/gutenprint-printer-app/current/usr/share: usr/share
      usr/lib/cups/filter/rastertogutenprint.5.3: usr/lib/gutenprint-printer-app/filter/rastertogutenprint.5.3
      usr/lib/cups/filter/commandtoepson: usr/lib/gutenprint-printer-app/filter/commandtoepson
      usr/lib/cups/filter/commandtocanon: usr/lib/gutenprint-printer-app/filter/commandtocanon
      usr/lib/cups/backend/gutenprint53+usb: usr/lib/gutenprint-printer-app/backend/gutenprint53+usb
      usr/share/cups/usb/net.sf.gimp-print.usb-quirks: usr/lib/gutenprint-printer-app/backend/net.sf.gimp-print.usb-quirks
      usr/lib/cups/driver/gutenprint.5.3: usr/share/ppd/gutenprint.5.3
    prime:
      - usr/bin/cups-calibrate
      - usr/bin/escputil
      - usr/sbin/*genppd*
      - usr/lib/lib*.so*
      - usr/lib/gutenprint-printer-app
      - usr/share/ppd/gutenprint.5.3
      - usr/share/gutenprint
      - usr/share/locale
      - usr/share/cups/calibrate.ppm
      - -snap
      - -etc/fonts
      - -var
      - -usr/include
      - -share/man
      - -share/doc
      - -share/lintian
      - -usr/share/fonts
      - -usr/share/man
      - -usr/share/doc
      - -usr/share/doc-base
      - -usr/share/lintian
      - -usr/share/gutenprint/doc
      - -usr/lib/gutenprint
      - -usr/lib/libgutenprint.a
      - -usr/lib/libgutenprint.la
      - -usr/lib/pkgconfig
      - -usr/lib/cups
    after: [cups]

  gutenprint-printer-app:
    plugin: make
    source: .
    make-parameters:
      - LDFLAGS="$LDFLAGS -ljpeg"
    # To improve convenience for developers (and everyone who wants to
    # build from source), we do a "make clean" before "make" here,
    # because if we had done "make" off-Snap, directly in the source
    # tree. and afterwards build the Snap with snapcraft, the build
    # sucks in our local binary of gutenprint-printer-app instead of
    # compiling its own one in the Snap harness with the appropriate
    # libraries, ending up with the Snap containing an executable
    # which does not work inside the Snap. The "make clean" removes
    # any accidentally grabbed binary.
    override-build: |
      set -eux
      make clean
      snapcraftctl build
    build-packages:
      - libusb-1.0-0-dev
    stage-packages:
      - libusb-1.0-0
      - libjbig0
      - liblcms2-2
      - libtiff5
      - libwebp6
    stage:
      - -usr/lib/gutenprint-printer-app
    prime:
      - usr/bin/gutenprint-printer-app
      - lib/*/lib*.so*
      - usr/lib/*/lib*.so*
      - usr/share/gutenprint-printer-app
      - -var
      - -usr/share/man
    after: [pappl-retrofit, pappl, cups-filters, gutenprint]

  scripts:
    plugin: dump
    source: .
    organize:
      # Startup wrapper scripts
      snap/local/run-gutenprint-printer-app*: scripts/
    prime:
      - scripts/
    after: [gutenprint-printer-app]
